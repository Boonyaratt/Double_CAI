time_format = "dd/MM/yyyy HH:mm"   # Example: 23/09/2025 22:18
time_range  = "25/06/2025 00:00" to "23/09/2025 23:59" (Asia/Bangkok, UTC+07)

users{
    user_id: 1000 unique (format: U0001..U1000)
}

products{
    product_id: 1000 unique (P0001..P1000),
    category: one of [
        "Beverages","Snacks","InstantFoods","DairyBakery","FrozenFoods",
        "HealthBeauty","Household","PersonalCare","ReadyToEat","Others"
    ],
    brand: one of Brand_001..Brand_050,
    base_price: float THB (≈20–300 by category)
}

stores{
    store_id: 50 unique (S001..S050),
    zone: int 1–12,
    province: one of [
        "กรุงเทพฯ","เชียงใหม่","ขอนแก่น","นครราชสีมา","ชลบุรี",
        "ภูเก็ต","สุราษฎร์ธานี","อุบลราชธานี","สงขลา","นนทบุรี"
    ],
    profile: one of [
        "Residential/Market","Educational Institution","Office","Gas Station",
        "Factory","Hospital","Tourist Attraction","Entertainment Venue","Transport Hub"
    ]
}

promotions{
    promo_id: 100 unique (PR0001..PR0100),
    promo_type: one of ["Flash Sale","Buy 1 get 1","Brandday","Mega Sale","Product_Coupon"],
    product_id: 1 promotion = 1 product (FK to products),
    discount: int percent
        # For "Buy 1 get 1": store 100 (treated as effective 50% only when qty >= 2; if qty=1 then 0%),
    start_date: string time_format within 3 months,
    end_date:   string time_format within 3 months (start_date < end_date; 7–14d or 30–60d)
}

# รวมธุรกรรมต่อผู้ใช้ 10–30 บิลใน 3 เดือน โดย ~30% เป็นบิลใช้โปร และ ~70% ไม่ใช้โปร
# ทั้งสองตารางมี transaction_id แยกกัน (คนละ namespace) และบันทึกราคาสุทธิจริง

transactions{  # บิล "ไม่ใช้โปร"
    transaction_id: unique (TX0000001...),
    user_id: FK users,
    product_id: FK products,
    qty: int [1..5],
    price: float THB  # net price = base_price * qty * noise(0.95–1.10)
    timestamp: string time_format within range,
    store_id: FK stores  # always present (offline purchase)
}

promotion_transactions{  # บิล "ใช้โปร"
    transaction_id: unique (PMTX0000001...),
    user_id: FK users,
    product_id: FK products,    # (เพิ่ม เพื่อคำนวณราคาและเทรนโมเดลได้จริง)
    qty: int [1..5],            # (เพิ่ม)
    price: float THB            # net price after discount * noise(0.97–1.03)
        # price calculation:
        # base = base_price * qty
        # if promo_type == "Buy 1 get 1":
        #     effective_discount_pct = 50 if qty >= 2 else 0
        # else:
        #     effective_discount_pct = discount
        # after_disc = base * (1 - effective_discount_pct/100)
        # price = after_disc * noise
    timestamp: string time_format within range,
    is_online: boolean  # True=15%, False=85%
    store_id: FK stores or NULL  # NULL when is_online=True, otherwise required
    promo_id: FK promotions
}
